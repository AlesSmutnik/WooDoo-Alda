"use client";

import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination } from "swiper/modules";

import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";

import styles from "../styles/ServiceCarousel.module.scss";

type ServicePackage = {
    id: number;
    title: string;
    description: string;
    features: string[];
    price: string;
  };
  
  const priceList: ServicePackage[] = [
    {
        id: 1,
        title: "Men≈°√≠ kusy n√°bytku",
        description: "Jednoduch√Ω n√°bytek, kter√Ω nezabere moc ƒçasu ani prostoru.",
        features: ["Noƒçn√≠ stolky, ≈æidle, mal√© police, konferenƒçn√≠ stolky"],
        price: "300‚Äì500 Kƒç / ks",
      },
      {
        id: 2,
        title: "St≈ôednƒõ velk√© kusy",
        description: "Bƒõ≈æn√Ω bytov√Ω n√°bytek, kter√Ω vy≈æaduje peƒçlivou mont√°≈æ.",
        features: ["Komody, sk≈ô√≠nƒõ, psac√≠ stoly, botn√≠ky"],
        price: "600‚Äì1200 Kƒç / ks",
      },
      {
        id: 3,
        title: "Velk√Ω n√°bytek",
        description: "N√°roƒçnƒõj≈°√≠ mont√°≈æe v√≠ce d√≠l≈Ø a rozmƒõrnƒõj≈°√≠ch sestav.",
        features: ["Velk√© ≈°atn√≠ sk≈ô√≠nƒõ, rohov√© sk≈ô√≠nƒõ, v√≠ce d√≠l≈Ø"],
        price: "1500‚Äì2500 Kƒç / ks",
      },
      {
        id: 4,
        title: "Postele",
        description: "Mont√°≈æ l≈Ø≈æek vƒçetnƒõ r√°mu, ro≈°t≈Ø a √∫lo≈æn√©ho prostoru.",
        features: ["Dƒõtsk√©, jednol≈Ø≈æka i man≈æelsk√© postele vƒçetnƒõ ro≈°t≈Ø"],
        price: "1000‚Äì1600 Kƒç / ks",
      },
      {
        id: 5,
        title: "Kuchy≈àsk√° linka",
        description:
          "Kompletn√≠ mont√°≈æ kuchyn√≠ z market≈Ø vƒçetnƒõ zavƒõ≈°en√≠ a p≈ôesn√©ho osazen√≠.",
        features: [
          "Kuchy≈àsk√© sestavy z market≈Ø, mont√°≈æ sk≈ô√≠nƒõk, √∫chytek, pracovn√≠ desky",
        ],
        price: "3000‚Äì8000 Kƒç / zak√°zka",
      },
      {
        id: 6,
        title: "Hodinov√° sazba",
        description:
          "Pro speci√°ln√≠ √∫pravy, kotven√≠ na stƒõny nebo jin√© pr√°ce mimo standardn√≠ mont√°≈æ.",
        features: [
          "√öpravy na m√≠ru, mont√°≈æ na stƒõnu, p≈ôid√°n√≠ dopl≈àk≈Ø, elektrospot≈ôebiƒçe",
        ],
        price: "450‚Äì700 Kƒç / hod",
      },
      {
        id: 7,
        title: "V√Ωjezd mimo Pardubice",
        description:
          "Cestovn√© pro zak√°zky mimo mƒõsto. Po Pardubic√≠ch v√Ωjezd zdarma.",
        features: ["Doprava na m√≠sto mont√°≈æe mimo mƒõsto"],
        price: "10 km ‚Äì 99 Kƒç, d√°le 9 Kƒç/km",
      },
      {
        id: 8,
        title: "Dovoz n√°bytku",
        description:
          "Dovezeme v√°mi zakoupen√Ω n√°bytek a≈æ k v√°m dom≈Ø a vyneseme, kam bude pot≈ôeba.",
        features: ["Dovoz zakoupen√©ho n√°bytku vƒçetnƒõ v√Ωnosu a manipulace"],
        price: "Pardubice od 350 Kƒç",
      },
    // ...ostatn√≠ polo≈æky
  ];


const ServiceCarousel: React.FC = () => {
  return (
    <div>
      <div className={styles.slHedBox}>
        <h2 className={styles.slNadpis}>Cen√≠k slu≈æeb</h2>
        <p className={styles.slPs}>
          Vyber si p≈ôesnƒõ ten, kter√Ω nejl√©pe odpov√≠d√° tv√Ωm pot≈ôeb√°m.
        </p>
      </div>
       <div  className={styles.carouselWrapper}>
      <div className={styles.navWrapper}>
        <button className={`swiper-button-prev ${styles.navBtn}`} />
        <button className={`swiper-button-next ${styles.navBtn}`} />
      </div>

      <Swiper
        spaceBetween={30}
        slidesPerView={1.20}
        navigation={{
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        }}
        pagination={{ clickable: true }}
        modules={[Navigation, Pagination]}
        breakpoints={{
          768: {
            slidesPerView: 20,
          },
          1024: {
            slidesPerView: 1,
          },
        }}
        className={styles.swiperContainer}
      >
        {priceList.map((pkg) => (
          <SwiperSlide key={pkg.id} className={styles.slBox}>
            <h3 className={styles.slId}>{pkg.title}</h3>
            <p className={styles.slDes}>{pkg.description}</p>
            <ul className={styles.ulReset}>
              {pkg.features.map((feature, index) => (
                <li key={index} className={styles.slIn}>
                  {feature}
                </li>
              ))}
            </ul>
            <p className={styles.slPrice}>üí∞ {pkg.price}</p>
          </SwiperSlide>
        ))}
      </Swiper>
      </div>
    </div>
  );
};

export default ServiceCarousel;
